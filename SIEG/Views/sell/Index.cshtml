@section Style{
    <link href="/css/jiazhan/general.css" rel="stylesheet">
    <link href="/css/jiazhan/product_buy_left.css" rel="stylesheet">
    <link href="/css/jiazhan/product_sell.css" rel="stylesheet">
    }
<div id="appVue">
    <!-- 上架頁面-->
    <div class="product_buy">
        <div>
            <div class="row align-items-center">
                <div class="col-xl-4 col-lg-5 col-12 offset-xl-2 offset-lg-1">
                    <div class="product_buy_Left">
                        <h2 class="fontBold">{{productInfo.pName}}</h2>
                        <h2 class="fontBold">Travis Scott Black Phantom</h2>
                        <div class="hightAndLowPrice">
                            <span>最高出價&nbsp:<span class="hightPrice fontBold">&nbsp{{DisplayMaxBid}}&nbsp</span></span> &nbsp|&nbsp
                            <span>最低報價&nbsp:<span class="lowPrice fontBold">&nbsp{{DisplayMinQuote}}&nbsp</span></span>
                            <p>US {{pSize}}</p>
                        </div>
                        <img :src="productInfo.pImg" alt="">
                    </div>
                </div>
                <div class="col-xl-5 col-lg-6 col-12 offset-xl-1">
                    <div class="product_buy_Right">
                        <div @@click="clickShowSize" class="selSize">
                            @*<div @@click="showSelSize = !showSelSize" class="selSize">*@
                            <div>尺碼&nbsp;:&nbsp;&nbsp;<span class="fontBold">US {{pSize}}</span></div>
                            <img src="https://stockx-assets.imgix.net/svg/icons/pencil.svg?auto=compress,format">
                        </div>

                        <div>
                            @*<div :class="{ displayNone: showSelSize }">*@
                            <div class="selSizeHide">
                                <p>選擇 US 尺碼</p>
                                <hr />
                                <div class="sizeItemContoiner row">
                                    <div class="col-12">
                                        <div style="display: flex;flex-wrap: wrap;justify-content: space-between;">

                                            <!--  動態產生尺碼item  -->
                                            <div class="sizePriceItem" @@click="activeIndex=index" v-for="(item, index) in DisplaySizeAndPriceList" :key="index">
                                                <div :class="['divSizeItem', 'sizeItem', {'active':activeIndex==index}]" @@click="clickShowSize();selectSizeItem(item.size,item.price,index,item.pID)">
                                                    <div class="item">
                                                        <div class="fontBold">US {{item.size}}</div>
                                                        <div class="fontGreen">{{item.fPrice}}</div>
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- PriceInfo -->
                        <div class="priceContent">
                            <div class="inputPriceGroup">
                                <span class="inputSpan">＄</span>
                                <input placeholder="輸入報價" type="number" class="inputPrice" v-model="pPrice">
                                <div class="priceState">{{DisplayPriceState}}</div>
                            </div>
                            <div class="calculateInfo">
                                <div class="specialOffer">
                                    <span>交易費 (10.0%)</span>
                                    <span> {{DisplayTradeFee}}</span>
                                </div>
                                <div class="specialOffer">
                                    <span>轉帳手續費(3%)</span>
                                    <span>{{DisplayTransFerFee}}</span>
                                </div>
                                <div class="specialOffer">
                                    <span>預計運費</span>
                                    <span>{{DisplayfreightFee}}</span>
                                </div>
                                <div class="specialOffer">
                                    <span>優惠折扣</span>
                                    <span>{{specialOffer}} %</span>
                                </div>
                                <div class="specialOffer">
                                    <span>Total</span>
                                    <span class="money">{{DisplayTotalPrice}}</span>
                                </div>
                            </div>
                        </div>
                        <div class="priceContent">
                            <div class="specialOffer2">
                                <span>收款資訊</span>
                                <!-- ↓↓↓　若有卡片資訊，文字改為編輯　↓↓↓ -->
                                <span class="add_card">新增</span>
                            </div>
                            <div class="credit_card_form">
                                <form>
                                    <div class="row">
                                        <div class="col-6">
                                            <input type="text" class="form-control" placeholder="銀行代碼">
                                        </div>
                                        <div class="col-6">
                                            <input type="text" class="form-control" placeholder="分行名稱">
                                        </div>
                                        <div class="col-12">
                                            <input type="text" class="form-control" placeholder="銀行帳號">
                                        </div>
                                    </div>
                                </form>
                                <div class="credit_card_btn">
                                    <button type="submit">儲存帳戶</button>
                                </div>
                            </div>

                        </div>

                        <div class="btnCancelAndNext">
                            <a>
                                <div class="btnCancel" @@click="back">取消</div>
                            </a>
                            <div class="btnNext">送出</div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts{
    <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.2.2/axios.min.js"></script>

    <script src="/lib/wow/wow.min.js"></script>
    <script src="/lib/easing/easing.min.js"></script>
    <script src="/lib/waypoints/waypoints.min.js"></script>
    <script src="/lib/owlcarousel/owl.carousel.min.js"></script>
    <script src="/lib/counterup/counterup.min.js"></script>
    <script src="/lib/parallax/parallax.min.js"></script>
    <script src="/lib/lightbox/js/lightbox.min.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/numeral.js/2.0.6/numeral.min.js"></script>


    <!-- Template Javascript -->
    <script src="/js/main.js"></script>

    <script>
        var webApiAddress = "https://localhost:7139";
        var appVue = new Vue({
            el: "#appVue",
            data: {
                productInfo: {},
                SizeAndPriceList: [],
                pID: sessionStorage.getItem("pID"),
                pSize: sessionStorage.getItem("pSize"),
                pPrice: sessionStorage.getItem("pPrice"),
                activeIndex: sessionStorage.getItem("selIndex"),
                showSelSize: true,
                freightFee: 100,
                specialOffer: 3,
                maxBid: null,
                minQuote: null,
                DisplayPriceState:null,

            },
            mounted: function () {
                let _this = this;
                $('.credit_card_form').hide();
                $(".add_card").click(function () {
                    $(this).parent().next().slideToggle();
                });
                $('.selSizeHide').hide();
                _this.getProductInfo();
                _this.getMaxMinPrice();
                _this.getSizeAndBid();
            },
            methods: {
                async getProductInfo() {
                    try {
                        let _this = this;
                        let response = await axios.get(`${webApiAddress}/api/ProductInfo/${_this.pID}`);
                        _this.productInfo = response.data;
                    } catch (error) {
                        console.log(error)
                    }
                },
                async getSizeAndBid() {
                    try {
                        let _this = this;
                        let response = await axios.get(`${webApiAddress}/api/GetSizeAndBid`);
                        _this.SizeAndPriceList = response.data;
                    } catch (error) {
                        console.log(error)
                    }
                },
                async getMaxMinPrice() {
                    try {
                        let _this = this;
                        let response = await axios.get(`${webApiAddress}/api/GetMaxMinPrice/${_this.pID}`);
                        _this.maxBid = response.data.maxBid;
                        _this.minQuote = response.data.minQuote;
                    } catch (error) {
                        console.log(error);
                    }
                },
                selectSizeItem: function (pSize, pPrice, index, pID) {
                    let _this = this;
                    _this.pSize = pSize;
                    _this.pPrice = pPrice;
                    _this.pID = pID;
                    sessionStorage.setItem("pSize", _this.pSize);
                    sessionStorage.setItem("pPrice", _this.pPrice);
                    sessionStorage.setItem("selIndex", index);
                    sessionStorage.setItem("pID", pID);
                },
                back: function () {
                    window.location = "/product_info"
                },
                clickShowSize: function () {
                    $('.selSizeHide').slideToggle();
                },
                Format: function (val) {
                    return numeral(val).format("$0,0");
                }

            },
            watch: {
                pID: {
                    handler: function () {
                        this.getProductInfo();
                        this.getMaxMinPrice();
                    }
                },
                pPrice:{
                    handler: function (newVal, oldVal) {
                        if (newVal >= this.minQuote) {
                            this.pPrice = this.minQuote;
                            this.DisplayPriceState = "你將以最高出價購買此商品";
                        } else {
                            this.pPrice = newVal;
                            this.DisplayPriceState = "你並非最高報價者";
                        }
                    },
                }
            },
            computed: {
                TradeFee: {
                    get() { return this.pPrice == 0 ? "" : this.pPrice * 0.1; }
                },
                TransferFee: {
                    get() { return this.pPrice == 0 ? "" : this.pPrice * 0.03; }
                },
                TotalPrice: {
                    get() {
                        return this.pPrice == 0 ? "" :
                            Math.round(this.pPrice - this.TradeFee - this.TransferFee - this.freightFee + this.TradeFee * this.specialOffer / 100);
                    }
                },
                DisplayTradeFee: {
                    get() { return this.Format(this.TradeFee); }
                },
                DisplayTransFerFee: {
                    get() { return this.Format(this.TransferFee); }
                },
                DisplayTotalPrice: {
                    get() { return this.Format(this.TotalPrice); }
                },
                DisplayfreightFee: {
                    get() { return this.Format(this.freightFee); }
                },
                DisplaySizeAndPriceList: {
                    get() {
                        return this.SizeAndPriceList.map(item => {
                            return {
                                pID: item.pID,
                                size: item.pSize,
                                price: item.pPrice,
                                fPrice: this.Format(item.pPrice)
                            }
                        })
                    }
                },
                DisplayMaxBid() {
                    return this.maxBid == 0 ? " - " : this.Format(this.maxBid)
                },
                DisplayMinQuote() {
                    return this.minQuote == 0 ? " - " : this.Format(this.minQuote)
                }



            }
        })

    </script>

}